openapi: 3.0.3
info:
  title: Payment Service API
  description: A lightweight payment service for handling checkout sessions, subscription management, and webhooks
  version: 1.0.0
  contact:
    name: Payment Service Team
    email: support@example.com

servers:
  - url: http://localhost:8080
    description: Development server

paths:
  /checkout:
    post:
      summary: Create Checkout Session
      description: Creates a new checkout session for a customer to purchase a product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCheckoutUrlRequest'
            example:
              email: "customer@example.com"
              name: "John Doe"
              product_id: "prod_123456"
      responses:
        '200':
          description: Checkout session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlResponse'
              example:
                url: "https://checkout.dodopayments.com/session_abc123"
        '400':
          description: Bad request - Invalid request body
          content:
            text/plain:
              schema:
                type: string
              example: "Invalid request body"
        '405':
          description: Method not allowed
          content:
            text/plain:
              schema:
                type: string
              example: "Method not allowed"

  /subscriptions:
    post:
      summary: Get Subscription Management Link
      description: Retrieves a link for customers to manage their subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSubscriptionManagementLinkRequest'
            example:
              customer_id: "cus_123456789"
      responses:
        '200':
          description: Subscription management link retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlResponse'
              example:
                url: "https://billing.dodopayments.com/manage/cus_123456789"
        '400':
          description: Bad request - Invalid request body
          content:
            text/plain:
              schema:
                type: string
              example: "Invalid request body"
        '405':
          description: Method not allowed
          content:
            text/plain:
              schema:
                type: string
              example: "Method not allowed"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
              example: "Failed to get subscription management link"

  /webhook:
    post:
      summary: Handle Payment Webhook
      description: Processes webhook events from Dodo Payments
      parameters:
        - name: webhook-signature
          in: header
          required: true
          description: Webhook signature for verification
          schema:
            type: string
        - name: webhook-id
          in: header
          required: true
          description: Unique webhook identifier
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DodoWebhookPayload'
            example:
              type: "subscription.created"
              data:
                subscription_id: "sub_123456789"
                status: "active"
                product_id: "prod_123456"
                customer:
                  customer_id: "cus_123456789"
                  email: "customer@example.com"
                  name: "John Doe"
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Webhook processed"
        '400':
          description: Bad request - Invalid payload or missing webhook-id
          content:
            text/plain:
              schema:
                type: string
              examples:
                invalid_payload:
                  value: "Invalid webhook payload"
                missing_webhook_id:
                  value: "Missing webhook-id header"
        '401':
          description: Unauthorized - Invalid webhook signature
          content:
            text/plain:
              schema:
                type: string
              example: "Invalid webhook signature"
        '405':
          description: Method not allowed
          content:
            text/plain:
              schema:
                type: string
              example: "Method not allowed"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
              example: "Failed to process webhook"

components:
  schemas:
    GetCheckoutUrlRequest:
      type: object
      required:
        - email
        - name
        - product_id
      properties:
        email:
          type: string
          format: email
          description: Customer's email address
          example: "customer@example.com"
        name:
          type: string
          description: Customer's full name
          example: "John Doe"
        product_id:
          type: string
          description: Unique identifier for the product to purchase
          example: "prod_123456"

    GetSubscriptionManagementLinkRequest:
      type: object
      required:
        - customer_id
      properties:
        customer_id:
          type: string
          description: Unique customer identifier
          example: "cus_123456789"

    UrlResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: The generated URL
          example: "https://checkout.dodopayments.com/session_abc123"

    Customer:
      type: object
      properties:
        customer_id:
          type: string
          description: Unique customer identifier
          example: "cus_123456789"
        email:
          type: string
          format: email
          description: Customer's email address
          example: "customer@example.com"
        name:
          type: string
          description: Customer's full name
          example: "John Doe"

    DodoWebhookPayload:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          description: Type of webhook event
          enum:
            - subscription.created
            - subscription.updated
            - subscription.cancelled
            - payment.succeeded
            - payment.failed
          example: "subscription.created"
        data:
          type: object
          required:
            - subscription_id
            - status
            - product_id
            - customer
          properties:
            subscription_id:
              type: string
              description: Unique subscription identifier
              example: "sub_123456789"
            status:
              type: string
              description: Current subscription status
              enum:
                - active
                - cancelled
                - past_due
                - unpaid
              example: "active"
            product_id:
              type: string
              description: Product identifier
              example: "prod_123456"
            customer:
              $ref: '#/components/schemas/Customer'

    PaymentProcessorResponse:
      type: object
      description: Response payload sent to your API after processing webhook
      properties:
        subscription_id:
          type: string
          description: Unique subscription identifier
          example: "sub_123456789"
        status:
          type: string
          description: Current subscription status
          example: "active"
        product_id:
          type: string
          description: Product identifier
          example: "prod_123456"
        customer:
          $ref: '#/components/schemas/Customer'

  securitySchemes:
    WebhookSignature:
      type: apiKey
      in: header
      name: webhook-signature
      description: Webhook signature for verifying authenticity
